# Generated by Django 3.1.8 on 2021-04-26 11:22

import django.core.validators
from django.db import migrations, models
import userPlus.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('email', models.EmailField(db_column='email', max_length=254, unique=True, verbose_name='EmailId')),
                ('name', models.CharField(blank=True, db_column='first_name', max_length=30, verbose_name='Name')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], db_column='gender', default='Male', max_length=100, verbose_name='Gender')),
                ('mobile', models.CharField(blank=True, db_column='mobile', max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile')),
                ('photo', models.ImageField(blank=True, db_column='photo', upload_to='', verbose_name='Photo')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on', null=True, verbose_name='CreatedOn')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on', null=True, verbose_name='UpdatedOn')),
                ('is_verified', models.BooleanField(db_column='is_emailVerified', default=False, verbose_name='IsEmailVerified')),
                ('is_superuser', models.BooleanField(db_column='is_superuser', default=False, verbose_name='IsSuperuser')),
                ('is_active', models.BooleanField(db_column='is_active', default=False, verbose_name='IsActive')),
                ('is_staff', models.BooleanField(db_column='is_staff', default=False, verbose_name='is_staff')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, db_column='last_login_ip', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', userPlus.models.UserManager()),
            ],
        ),
    ]
